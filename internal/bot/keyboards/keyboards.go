package keyboards

import (
	"fmt"

	tgbotapi "github.com/go-telegram-bot-api/telegram-bot-api/v5"
)

// MainAdminKeyboard –æ—Å–Ω–æ–≤–Ω–æ–µ –∞–¥–º–∏–Ω –º–µ–Ω—é
func MainAdminKeyboard() tgbotapi.InlineKeyboardMarkup {
	return tgbotapi.NewInlineKeyboardMarkup(
		tgbotapi.NewInlineKeyboardRow(
			tgbotapi.NewInlineKeyboardButtonData("üë• –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º–∏", "manage_users"),
		),
		tgbotapi.NewInlineKeyboardRow(
			tgbotapi.NewInlineKeyboardButtonData("üìù –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –ø–æ–¥–ø–∏—Å–∫–∞–º–∏", "manage_subscriptions"),
		),
		tgbotapi.NewInlineKeyboardRow(
			tgbotapi.NewInlineKeyboardButtonData("‚öôÔ∏è –ì–ª–æ–±–∞–ª—å–Ω—ã–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏", "global_settings"),
		),
		tgbotapi.NewInlineKeyboardRow(
			tgbotapi.NewInlineKeyboardButtonData("üìä –ê–Ω–∞–ª–∏—Ç–∏–∫–∞", "analytics"),
		),
	)
}

// SubscriptionManagementKeyboard –º–µ–Ω—é —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –ø–æ–¥–ø–∏—Å–∫–∞–º–∏
func SubscriptionManagementKeyboard() tgbotapi.InlineKeyboardMarkup {
	return tgbotapi.NewInlineKeyboardMarkup(
		tgbotapi.NewInlineKeyboardRow(
			tgbotapi.NewInlineKeyboardButtonData("‚ûï –°–æ–∑–¥–∞—Ç—å –ø–æ–¥–ø–∏—Å–∫—É", "create_subscription"),
		),
		tgbotapi.NewInlineKeyboardRow(
			tgbotapi.NewInlineKeyboardButtonData("üìù –†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å –ø–æ–¥–ø–∏—Å–∫—É", "edit_subscription"),
		),
		tgbotapi.NewInlineKeyboardRow(
			tgbotapi.NewInlineKeyboardButtonData("üìã –°–ø–∏—Å–æ–∫ –ø–æ–¥–ø–∏—Å–æ–∫", "list_subscriptions_edit"),
		),
		tgbotapi.NewInlineKeyboardRow(
			tgbotapi.NewInlineKeyboardButtonData("‚óÄÔ∏è –ù–∞–∑–∞–¥", "main_menu_edit"),
		),
	)
}

// UserManagementKeyboard –º–µ–Ω—é —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º–∏
func UserManagementKeyboard() tgbotapi.InlineKeyboardMarkup {
	return tgbotapi.NewInlineKeyboardMarkup(
		tgbotapi.NewInlineKeyboardRow(
			tgbotapi.NewInlineKeyboardButtonData("‚ûï –°–æ–∑–¥–∞—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è", "create_user"),
		),
		tgbotapi.NewInlineKeyboardRow(
			tgbotapi.NewInlineKeyboardButtonData("üìù –†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è", "edit_user"),
		),
		tgbotapi.NewInlineKeyboardRow(
			tgbotapi.NewInlineKeyboardButtonData("üìã –°–ø–∏—Å–æ–∫ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π", "list_users_edit"),
		),
		tgbotapi.NewInlineKeyboardRow(
			tgbotapi.NewInlineKeyboardButtonData("‚óÄÔ∏è –ù–∞–∑–∞–¥", "main_menu_edit"),
		),
	)
}

// UserSubscriptionKeyboard –º–µ–Ω—é —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –ø–æ–¥–ø–∏—Å–∫–∞–º–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
func UserSubscriptionKeyboard(userID string) tgbotapi.InlineKeyboardMarkup {
	return tgbotapi.NewInlineKeyboardMarkup(
		tgbotapi.NewInlineKeyboardRow(
			tgbotapi.NewInlineKeyboardButtonData("‚ûï –ü—Ä–∏–≤—è–∑–∞—Ç—å –ø–æ–¥–ø–∏—Å–∫—É", fmt.Sprintf("user_add_sub_%s", userID)),
		),
		tgbotapi.NewInlineKeyboardRow(
			tgbotapi.NewInlineKeyboardButtonData("üìù –ù–∞—Å—Ç—Ä–æ–∏—Ç—å –ø–æ–¥–ø–∏—Å–∫—É", fmt.Sprintf("user_config_sub_%s", userID)),
		),
		tgbotapi.NewInlineKeyboardRow(
			tgbotapi.NewInlineKeyboardButtonData("‚ûñ –û—Ç–ø–∏—Å–∞—Ç—å", fmt.Sprintf("user_remove_sub_%s", userID)),
		),
		tgbotapi.NewInlineKeyboardRow(
			tgbotapi.NewInlineKeyboardButtonData("‚óÄÔ∏è –ù–∞–∑–∞–¥", "edit_user"),
		),
	)
}

// AnalyticsKeyboard –º–µ–Ω—é –∞–Ω–∞–ª–∏—Ç–∏–∫–∏
func AnalyticsKeyboard() tgbotapi.InlineKeyboardMarkup {
	return tgbotapi.NewInlineKeyboardMarkup(
		tgbotapi.NewInlineKeyboardRow(
			tgbotapi.NewInlineKeyboardButtonData("üìà –û–±—â–∞—è –ø—Ä–∏–±—ã–ª—å", "analytics_total"),
		),
		tgbotapi.NewInlineKeyboardRow(
			tgbotapi.NewInlineKeyboardButtonData("üìÖ –ü—Ä–∏–±—ã–ª—å –∑–∞ –º–µ—Å—è—Ü", "analytics_monthly"),
		),
		tgbotapi.NewInlineKeyboardRow(
			tgbotapi.NewInlineKeyboardButtonData("üë• –ü–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º", "analytics_users"),
		),
		tgbotapi.NewInlineKeyboardRow(
			tgbotapi.NewInlineKeyboardButtonData("üì± –ü–æ –ø–æ–¥–ø–∏—Å–∫–∞–º", "analytics_subscriptions"),
		),
		tgbotapi.NewInlineKeyboardRow(
			tgbotapi.NewInlineKeyboardButtonData("‚óÄÔ∏è –ù–∞–∑–∞–¥", "main_menu_edit"),
		),
	)
}

// CurrencyKeyboard –≤—ã–±–æ—Ä –≤–∞–ª—é—Ç—ã
func CurrencyKeyboard() tgbotapi.InlineKeyboardMarkup {
	return tgbotapi.NewInlineKeyboardMarkup(
		tgbotapi.NewInlineKeyboardRow(
			tgbotapi.NewInlineKeyboardButtonData("üíµ USD", "currency_USD"),
			tgbotapi.NewInlineKeyboardButtonData("üí∂ EUR", "currency_EUR"),
		),
		tgbotapi.NewInlineKeyboardRow(
			tgbotapi.NewInlineKeyboardButtonData("‚ùå –û—Ç–º–µ–Ω–∞", "cancel"),
		),
	)
}

// ConfirmKeyboard –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ –¥–µ–π—Å—Ç–≤–∏—è
func ConfirmKeyboard(action string) tgbotapi.InlineKeyboardMarkup {
	return tgbotapi.NewInlineKeyboardMarkup(
		tgbotapi.NewInlineKeyboardRow(
			tgbotapi.NewInlineKeyboardButtonData("‚úÖ –î–∞", fmt.Sprintf("confirm_%s", action)),
			tgbotapi.NewInlineKeyboardButtonData("‚ùå –ù–µ—Ç", "cancel"),
		),
	)
}

// BackKeyboard –ø—Ä–æ—Å—Ç–∞—è –∫–Ω–æ–ø–∫–∞ –Ω–∞–∑–∞–¥
func BackKeyboard(backTo string) tgbotapi.InlineKeyboardMarkup {
	return tgbotapi.NewInlineKeyboardMarkup(
		tgbotapi.NewInlineKeyboardRow(
			tgbotapi.NewInlineKeyboardButtonData("‚óÄÔ∏è –ù–∞–∑–∞–¥", backTo),
		),
	)
}

// PaginationKeyboard –Ω–∞–≤–∏–≥–∞—Ü–∏—è –ø–æ —Å—Ç—Ä–∞–Ω–∏—Ü–∞–º
func PaginationKeyboard(action string, currentPage, totalPages int) tgbotapi.InlineKeyboardMarkup {
	var buttons []tgbotapi.InlineKeyboardButton

	if currentPage > 1 {
		buttons = append(buttons, tgbotapi.NewInlineKeyboardButtonData("‚óÄÔ∏è", fmt.Sprintf("%s_page_%d", action, currentPage-1)))
	}

	buttons = append(buttons, tgbotapi.NewInlineKeyboardButtonData(
		fmt.Sprintf("%d/%d", currentPage, totalPages),
		"noop",
	))

	if currentPage < totalPages {
		buttons = append(buttons, tgbotapi.NewInlineKeyboardButtonData("‚ñ∂Ô∏è", fmt.Sprintf("%s_page_%d", action, currentPage+1)))
	}

	return tgbotapi.NewInlineKeyboardMarkup(
		tgbotapi.NewInlineKeyboardRow(buttons...),
		tgbotapi.NewInlineKeyboardRow(
			tgbotapi.NewInlineKeyboardButtonData("‚óÄÔ∏è –ù–∞–∑–∞–¥", "main_menu"),
		),
	)
}

// NavigationKeyboard –∫–ª–∞–≤–∏–∞—Ç—É—Ä–∞ —Å –Ω–∞–≤–∏–≥–∞—Ü–∏–µ–π
func NavigationKeyboard(backTo, mainMenu string) tgbotapi.InlineKeyboardMarkup {
	return tgbotapi.NewInlineKeyboardMarkup(
		tgbotapi.NewInlineKeyboardRow(
			tgbotapi.NewInlineKeyboardButtonData("‚óÄÔ∏è –ù–∞–∑–∞–¥", backTo),
			tgbotapi.NewInlineKeyboardButtonData("üè† –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é", mainMenu),
		),
	)
}

// CancelNavigationKeyboard –∫–ª–∞–≤–∏–∞—Ç—É—Ä–∞ —Å –æ—Ç–º–µ–Ω–æ–π –∏ –Ω–∞–≤–∏–≥–∞—Ü–∏–µ–π
func CancelNavigationKeyboard() tgbotapi.InlineKeyboardMarkup {
	return tgbotapi.NewInlineKeyboardMarkup(
		tgbotapi.NewInlineKeyboardRow(
			tgbotapi.NewInlineKeyboardButtonData("‚ùå –û—Ç–º–µ–Ω–∞", "cancel"),
		),
		tgbotapi.NewInlineKeyboardRow(
			tgbotapi.NewInlineKeyboardButtonData("üè† –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é", "main_menu"),
		),
	)
}

// EditNavigationKeyboard –∫–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –¥–ª—è —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è —Å –Ω–∞–≤–∏–≥–∞—Ü–∏–µ–π
func EditNavigationKeyboard(backTo string) tgbotapi.InlineKeyboardMarkup {
	return tgbotapi.NewInlineKeyboardMarkup(
		tgbotapi.NewInlineKeyboardRow(
			tgbotapi.NewInlineKeyboardButtonData("‚óÄÔ∏è –ù–∞–∑–∞–¥", backTo),
		),
		tgbotapi.NewInlineKeyboardRow(
			tgbotapi.NewInlineKeyboardButtonData("üè† –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é", "main_menu"),
		),
	)
}

// CreateProcessKeyboard –∫–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –¥–ª—è –ø—Ä–æ—Ü–µ—Å—Å–∞ —Å–æ–∑–¥–∞–Ω–∏—è
func CreateProcessKeyboard(step string) tgbotapi.InlineKeyboardMarkup {
	var buttons [][]tgbotapi.InlineKeyboardButton

	if step == "start" {
		// –¢–æ–ª—å–∫–æ –∫–Ω–æ–ø–∫–∞ –æ—Ç–º–µ–Ω—ã –≤ –Ω–∞—á–∞–ª–µ
		buttons = append(buttons, tgbotapi.NewInlineKeyboardRow(
			tgbotapi.NewInlineKeyboardButtonData("‚ùå –û—Ç–º–µ–Ω–∞", "cancel"),
		))
	} else {
		// –í –ø—Ä–æ—Ü–µ—Å—Å–µ - –∫–Ω–æ–ø–∫–∏ "–ù–∞–∑–∞–¥" –∏ "–û—Ç–º–µ–Ω–∞"
		buttons = append(buttons, tgbotapi.NewInlineKeyboardRow(
			tgbotapi.NewInlineKeyboardButtonData("‚óÄÔ∏è –ù–∞–∑–∞–¥", "step_back"),
			tgbotapi.NewInlineKeyboardButtonData("‚ùå –û—Ç–º–µ–Ω–∞", "cancel"),
		))
	}

	return tgbotapi.NewInlineKeyboardMarkup(buttons...)
}

// CreateConfirmKeyboard –∫–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –¥–ª—è –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è —Å–æ–∑–¥–∞–Ω–∏—è
func CreateConfirmKeyboard(action string) tgbotapi.InlineKeyboardMarkup {
	return tgbotapi.NewInlineKeyboardMarkup(
		tgbotapi.NewInlineKeyboardRow(
			tgbotapi.NewInlineKeyboardButtonData("‚úÖ –°–æ–∑–¥–∞—Ç—å", fmt.Sprintf("confirm_%s", action)),
		),
		tgbotapi.NewInlineKeyboardRow(
			tgbotapi.NewInlineKeyboardButtonData("‚óÄÔ∏è –ù–∞–∑–∞–¥", "step_back"),
			tgbotapi.NewInlineKeyboardButtonData("‚ùå –û—Ç–º–µ–Ω–∞", "cancel"),
		),
	)
}

// CreateSuccessKeyboard –∫–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –ø–æ—Å–ª–µ —É—Å–ø–µ—à–Ω–æ–≥–æ —Å–æ–∑–¥–∞–Ω–∏—è
func CreateSuccessKeyboard(backTo string) tgbotapi.InlineKeyboardMarkup {
	var buttonText, callbackData string

	// –û–ø—Ä–µ–¥–µ–ª—è–µ–º –ø—Ä–∞–≤–∏–ª—å–Ω—ã–µ callback –¥–ª—è –µ–¥–∏–Ω–æ–π –Ω–∞–≤–∏–≥–∞—Ü–∏–∏
	switch backTo {
	case "manage_subscriptions":
		buttonText = "‚óÄÔ∏è –ö —É–ø—Ä–∞–≤–ª–µ–Ω–∏—é –ø–æ–¥–ø–∏—Å–∫–∞–º–∏"
		callbackData = "manage_subscriptions_edit"
	case "manage_users":
		buttonText = "‚óÄÔ∏è –ö —É–ø—Ä–∞–≤–ª–µ–Ω–∏—é –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º–∏"
		callbackData = "manage_users_edit"
	case "global_settings":
		buttonText = "‚óÄÔ∏è –ö –Ω–∞—Å—Ç—Ä–æ–π–∫–∞–º"
		callbackData = "global_settings_edit"
	case "analytics":
		buttonText = "‚óÄÔ∏è –ö –∞–Ω–∞–ª–∏—Ç–∏–∫–µ"
		callbackData = "analytics_edit"
	default:
		buttonText = "‚óÄÔ∏è –ù–∞–∑–∞–¥"
		callbackData = "main_menu_edit"
	}

	return tgbotapi.NewInlineKeyboardMarkup(
		tgbotapi.NewInlineKeyboardRow(
			tgbotapi.NewInlineKeyboardButtonData(buttonText, callbackData),
		),
		tgbotapi.NewInlineKeyboardRow(
			tgbotapi.NewInlineKeyboardButtonData("üè† –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é", "main_menu_edit"),
		),
	)
}

// CurrencyKeyboardWithNav –≤—ã–±–æ—Ä –≤–∞–ª—é—Ç—ã —Å –Ω–∞–≤–∏–≥–∞—Ü–∏–µ–π
func CurrencyKeyboardWithNav() tgbotapi.InlineKeyboardMarkup {
	return tgbotapi.NewInlineKeyboardMarkup(
		tgbotapi.NewInlineKeyboardRow(
			tgbotapi.NewInlineKeyboardButtonData("üíµ USD", "currency_USD"),
			tgbotapi.NewInlineKeyboardButtonData("üí∂ EUR", "currency_EUR"),
		),
		tgbotapi.NewInlineKeyboardRow(
			tgbotapi.NewInlineKeyboardButtonData("‚óÄÔ∏è –ù–∞–∑–∞–¥", "step_back"),
			tgbotapi.NewInlineKeyboardButtonData("‚ùå –û—Ç–º–µ–Ω–∞", "cancel"),
		),
	)
}

// BackToMenuKeyboard –∫–Ω–æ–ø–∫–∞ –¥–ª—è –≤–æ–∑–≤—Ä–∞—Ç–∞ –≤ –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–Ω–æ–µ –º–µ–Ω—é
func BackToMenuKeyboard(menuType string) tgbotapi.InlineKeyboardMarkup {
	var buttonText, callbackData string

	switch menuType {
	case "subscriptions":
		buttonText = "‚óÄÔ∏è –ö —É–ø—Ä–∞–≤–ª–µ–Ω–∏—é –ø–æ–¥–ø–∏—Å–∫–∞–º–∏"
		callbackData = "manage_subscriptions_edit"
	case "users":
		buttonText = "‚óÄÔ∏è –ö —É–ø—Ä–∞–≤–ª–µ–Ω–∏—é –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º–∏"
		callbackData = "manage_users_edit"
	case "analytics":
		buttonText = "‚óÄÔ∏è –ö –∞–Ω–∞–ª–∏—Ç–∏–∫–µ"
		callbackData = "analytics_edit"
	case "settings":
		buttonText = "‚óÄÔ∏è –ö –Ω–∞—Å—Ç—Ä–æ–π–∫–∞–º"
		callbackData = "global_settings_edit"
	default:
		buttonText = "‚óÄÔ∏è –ù–∞–∑–∞–¥"
		callbackData = "main_menu_edit"
	}

	return tgbotapi.NewInlineKeyboardMarkup(
		tgbotapi.NewInlineKeyboardRow(
			tgbotapi.NewInlineKeyboardButtonData(buttonText, callbackData),
		),
		tgbotapi.NewInlineKeyboardRow(
			tgbotapi.NewInlineKeyboardButtonData("üè† –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é", "main_menu_edit"),
		),
	)
}
